<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robot">

    <xacro:include filename="inertial_macros.xacro"/>
    <xacro:include filename="gazebo_tags.xacro"/>
    
<!--  ***** ROBOT ASPECT  *****   -->  
    <!-- colors--> 
    <material name="white">
        <color rgba="1 1 1 1"/>
    </material>

    <material name="orange">
        <color rgba="1 0.3 0.1 1"/>
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
    </material>

    <!-- measures --> 
    <xacro:property name="base_size_x_half" value="0.0655" />
    <xacro:property name="base_size_y_half" value="0.1905" />
    <xacro:property name="base_size_z" value="0.026" />
    <xacro:property name="link_z_size_x" value="0.019" />
    <xacro:property name="link_z_size_y" value="0.038" />
    <xacro:property name="link_z_size_z" value="0.14" />
    <xacro:property name="link_x_size_x" value="0.092" />
    <xacro:property name="link_x_size_y" value="0.038" />
    <xacro:property name="link_x_size_z" value="0.025" />
    <xacro:property name="link_y_size_x" value="0.045" />
    <xacro:property name="link_y_size_y" value="0.3" />
    <xacro:property name="link_y_size_z" value="0.01" />
    <xacro:property name="x_offset" value="0.007" />
    <xacro:property name="y_offset" value="0.006" />
    <xacro:property name="mass_base" value="0.04" />
    <xacro:property name="mass_x" value="0.3" />
    <xacro:property name="mass_y" value="0.3" />
    <xacro:property name="mass_z" value="0.25" />
    <!-- measures for the needle -->
    <xacro:property name="needle_mass" value="0.006" /> 
    <xacro:property name="link_qty" value="5"/>
	<xacro:property name="link_length" value="${needle_length/ link_qty}"/>
	<xacro:property name="link_radius" value="${needle_radius}"/>
	<xacro:property name="link_mass" value="needle_mass/link_qty"/>
	<xacro:property name="needle_radius" value="0.001" />
	<xacro:property name="needle_length" value="0.15" />
	 
    <!-- links and bases --> 
    <link name="dummy_link"/>
    <joint name="dummy_joint" type="fixed">
        <parent link="dummy_link"/>
        <child link="base"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <link name="base">
        <visual>
            <geometry>
                <box size="${base_size_x_half * 2} ${base_size_y_half * 2} ${base_size_z}" />
            </geometry>
            <material name="orange" />
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${base_size_x_half * 2} ${base_size_y_half * 2} ${base_size_z}"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="${mass_base}" x="${base_size_x_half * 2}" y="${base_size_y_half * 2}" z="${base_size_z * 2}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>
    <joint name="base_joint" type="fixed">
        <parent link="base" />
        <child link="link_z" />
        <origin xyz="${base_size_x_half - link_z_size_x/2 - x_offset} -${base_size_y_half - link_z_size_y/2 - y_offset} 0.0" />
    </joint>


    <link name="link_z">
        <visual>
            <origin xyz="0 0 ${base_size_z/2 + link_z_size_z/2}" rpy="0.0 0.0 0.0"  />
            <geometry>
                <box size="${link_z_size_x} ${link_z_size_y} ${link_z_size_z}" />
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <origin xyz="0 0 ${base_size_z/2 + link_z_size_z/2}" rpy="0 0 0"/>
            <geometry>
                <box size="${link_z_size_x} ${link_z_size_y} ${link_z_size_z}"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="${mass_z}" x="${link_z_size_x}" y="${link_z_size_y}" z="${link_z_size_z}">
            <origin xyz="0 0 ${base_size_z/2 + link_z_size_z/2}" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>
    <joint name="joint_zx" type="prismatic">
        <origin xyz="0 0 ${base_size_z/2 + link_z_size_z/2}" />
        <parent link="link_z" />
        <child link="link_x" />
        <axis xyz="0 0 1" />
        <limit effort="100" lower="-${base_size_z/2 + link_z_size_z/2 - link_x_size_z}" upper="${base_size_z/2 + link_z_size_z/2 - link_x_size_z}" velocity="0.1"  />
    </joint>


    <link name="link_x">
        <visual>
            <origin xyz="-${link_z_size_x/2 + link_x_size_x/2} 0 0" rpy="0 0 0"  />
            <geometry>
                <box size="${link_x_size_x} ${link_x_size_y} ${link_x_size_z}" />
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <origin xyz="-${link_z_size_x/2 + link_x_size_x/2} 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${link_x_size_x} ${link_x_size_y} ${link_x_size_z}"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="${mass_x}" x="${link_x_size_x}" y="${link_x_size_y}" z="${link_x_size_z}">
            <origin xyz="-${link_z_size_x/2 + link_x_size_x/2} 0 0" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>
    <joint name="joint_xy" type="prismatic">
        <parent link="link_x" />
        <child link="link_y" />
        <origin xyz="-${link_z_size_x/2 + link_x_size_x/2}  0 0" rpy="0 0 0" />
        <axis xyz="1 0 0" />
        <limit effort="1000.0" lower="-${link_z_size_x/2 + link_x_size_x/2 - link_z_size_x/2}" upper="${link_z_size_x/2 + link_x_size_x/2 - link_z_size_x/2}" velocity="0.1"  />        
    </joint>


    <link name="link_y">
        <visual>
            <origin xyz="0 ${link_y_size_y/2 + link_x_size_y/2}  0" />
            <geometry>
                <box size="${link_y_size_x} ${link_y_size_y} ${link_y_size_z}"  />
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <origin xyz="0 ${link_y_size_y/2 + link_x_size_y/2}  0" rpy="0 0 0"/>
            <geometry>
                <box size="${link_y_size_x} ${link_y_size_y} ${link_y_size_z}"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="${mass_y}" x="${link_y_size_x}" y="${link_y_size_y}" z="${link_y_size_z}">
            <origin xyz="0 ${link_y_size_y/2 + link_x_size_y/2}  0" rpy="0 0 0"/>
        </xacro:inertial_box>        
    </link>

    <!--joint name="joint_y" type="prismatic">
        <parent link="link_y" />
        <child link="needle" />
        <origin xyz="0 0 ${link_y_size_z/2}" rpy="0 0 0" />
        <axis xyz="0 1 0" />
        <limit effort="1000.0" lower="0.045" upper="0.12" velocity="0.1"  />        
    </joint>

    <link name="needle">
        <visual>
            <origin xyz="0 -0.075 0" rpy="1.5708 0 0"/>
            <geometry>
                <cylinder radius="${needle_radius}" length = "${needle_length}" />
            </geometry>
            <material name="blue"/>
        </visual>
    </link-->

	<!-- constuction of the articulated needle -->
	<link name="link_1">
        <visual>
            <geometry>
                <cylinder length="${link_length}" radius="${link_radius}"/>
            </geometry>
            <origin xyz="0 0 0" rpy="0 1.5708 1.5708"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 1.5708 1.5708"/>
            <geometry>
                <box size="${link_y_size_x} ${link_y_size_y} ${link_y_size_z}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${needle_mass/link_qty}" length="${link_length}" radius="${link_radius}">
            <origin xyz="0 0 0" rpy="0 1.5708 1.5708"/>
        </xacro:inertial_cylinder>  
    </link>
    <joint name="joint_needle" type="prismatic">
        <parent link="link_y"/>
        <child link="link_1"/>
        <origin xyz="0 0 ${link_y_size_z}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit effort="1000" velocity="0.1" lower="-${needle_length}" upper="${needle_length/2}"/>
    </joint>
    <gazebo reference="link_1">
        <kp>1.0</kp>
        <kd>1.0</kd>
        <mu1>1000.0</mu1>
        <mu2>1000.0</mu2>
        <material>Gazebo/Green</material>
        <self_collide>1</self_collide>
    </gazebo>
    
    <xacro:macro name="needle_link" params="base_name parent_name colour">
        
        <link name="${base_name}_aux">
            <visual>
	        <geometry>
	            <cylinder length="${link_length * 1/10}" radius="${link_radius}"/>
	        </geometry>
	        <origin xyz="0 0 0" rpy="0 1.5708 1.5708"/>
	    </visual>
	    <collision>
	        <origin xyz="0 0 0" rpy="0 1.5708 1.5708"/>
	        <geometry>
	            <box size="${link_y_size_x} ${link_y_size_y} ${link_y_size_z}"/>
	        </geometry>
	    </collision>
	    <xacro:inertial_cylinder mass="${needle_mass/link_qty}" length="${link_length}" radius="${link_radius}">
	        <origin xyz="0 0 0" rpy="0 1.5708 1.5708"/>
	    </xacro:inertial_cylinder>
	</link>
    	
    	<gazebo reference="${base_name}_aux">
    		<kp>1.0</kp>
            <kd>1.0</kd>
            <mu1>1000.0</mu1>
            <mu2>1000.0</mu2>
            <material>Gazebo/Black</material>
            <self_collide>1</self_collide>
        </gazebo>
    	
    	
        <link name="${base_name}">
     	    <visual>
	        <geometry>
	            <cylinder length="${link_length * 9/10}" radius="${link_radius}"/>
	        </geometry>
	        <origin xyz="0 0 0" rpy="0 1.5708 1.5708"/>
	    </visual>
	    <collision>
	        <origin xyz="0 0 0" rpy="0 1.5708 1.5708"/>
	        <geometry>
	            <box size="${link_y_size_x} ${link_y_size_y} ${link_y_size_z}"/>
	        </geometry>
	    </collision>
	    <xacro:inertial_cylinder mass="${needle_mass/link_qty}" length="${link_length}" radius="${link_radius}">
	        <origin xyz="0 0 0" rpy="0 1.5708 1.5708"/>
	    </xacro:inertial_cylinder>
    	</link>
    	
    	<gazebo reference="${base_name}">
    		<kp>1.0</kp>
            <kd>1.0</kd>
            <mu1>1000.0</mu1>
            <mu2>1000.0</mu2>
            <material>Gazebo/${colour}</material>
            <self_collide>1</self_collide>
        </gazebo>
        
        <joint name="${base_name}_aux_joint" type="revolute">
            <parent link="${parent_name}"/>
        	<child link="${base_name}_aux"/>
            <origin xyz="0 ${link_length/2} 0" rpy="0 0 0"/>
            <limit lower="-0.04" upper="0.04" effort="100.0" velocity="0.1"/>
            <axis xyz="1 0 0"/>
    	</joint>
    	
        <joint name="${base_name}_joint" type="revolute">
    	    <parent link="${base_name}_aux"/>
        	<child link="${base_name}"/>
            <origin xyz="0 ${link_length/2} 0" rpy="0 0 0"/>
            <limit lower="-0.04" upper="0.04" effort="100.0" velocity="0.1"/>
            <axis xyz="0 1 0"/>
    	</joint>	
    	
    	<transmission name="tran${base_name}_aux">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${base_name}_aux_joint">
                <hardwareInterface>EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="motor${base_name}_aux">
                <hardwareInterface>EffortJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
        
        <transmission name="tran${base_name}">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${base_name}_joint">
                <hardwareInterface>EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="motor${base_name}">
                <hardwareInterface>EffortJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
    	
    </xacro:macro>
    
    <!-- initialisation of the needle-->
    <xacro:needle_link base_name="link_2" parent_name="link_1" colour="Blue"/>
    <xacro:needle_link base_name="link_3" parent_name="link_2" colour="Red"/>
    <xacro:needle_link base_name="link_4" parent_name="link_3" colour="Purple"/>
    <xacro:needle_link base_name="link_5" parent_name="link_4" colour="White"/>




<!--  ***** ROS2 GAZEBO CONTROL PACKAGE  *****   -->    
    <ros2_control name="GazeboSystem" type="system">
        <hardware>
            <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </hardware>
        <joint name="joint_zx">
            <command_interface name="position">
                <param name="min">-${base_size_z/2 + link_z_size_z/2 - link_x_size_z}"</param>
                <param name="max">"${base_size_z/2 + link_z_size_z/2 - link_x_size_z}"</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>
        <joint name="joint_xy">
            <command_interface name="position">
                <param name="min">-${link_z_size_x/2 + link_x_size_x/2 - link_z_size_x/2}</param>
                <param name="max">${link_z_size_x/2 + link_x_size_x/2 - link_z_size_x/2}</param>
            </command_interface>
            <state_interface name="position"/> <!--what I want to broadcast-->
            <state_interface name="velocity"/>
        </joint>
        <joint name="joint_needle">
            <command_interface name="position">
                <param name="min">-${needle_length}</param>
                <param name="max">${needle_length/2}</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>
        <joint name="link_2_aux_joint">
            <command_interface name="position">
                <param name="min">-0.04</param>
                <param name="max">0.04</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>
        <joint name="link_2_joint">
            <command_interface name="position">
                <param name="min">-0.04</param>
                <param name="max">0.04</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>
        <joint name="link_3_aux_joint">
            <command_interface name="position">
                <param name="min">-0.04</param>
                <param name="max">0.04</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>
        <joint name="link_3_joint">
            <command_interface name="position">
                <param name="min">-0.04</param>
                <param name="max">0.04</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>
        <joint name="link_4_aux_joint">
            <command_interface name="position">
                <param name="min">-0.04</param>
                <param name="max">0.04</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>
        <joint name="link_4_joint">
            <command_interface name="position">
                <param name="min">-0.04</param>
                <param name="max">0.04</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>
        <joint name="link_5_aux_joint">
            <command_interface name="position">
                <param name="min">-0.04</param>
                <param name="max">0.04</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>
        <joint name="link_5_joint">
            <command_interface name="position">
                <param name="min">-0.04</param>
                <param name="max">0.04</param>
            </command_interface>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>
    </ros2_control>

    <gazebo>
        <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
            <parameters>$(find my_bot)/config/controller.yaml</parameters>
        </plugin>
    </gazebo>

    
    
    
  




</robot>
